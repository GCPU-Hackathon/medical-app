# HTTP server - redirects to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name holonauts.fr;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name _;
    root /var/www/public;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/certificate.crt;
    ssl_certificate_key /etc/nginx/ssl/private.key;
    
    # SSL settings for security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    index index.php;
    charset utf-8;

    # Laravel routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    # PHP-FPM configuration
    location ~ \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        client_max_body_size 100M;
    }

    # Hide .htaccess and other hidden files
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Proxy Vite dev server for HMR (Hot Module Replacement)
    # Handle all Vite-related requests including WebSockets
    location ~ ^/(resources|@vite|@react-refresh|@id|node_modules|src)/ {
        proxy_pass http://127.0.0.1:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Vite HMR WebSocket endpoints
    location ~ ^/(__vite_ping|__vite_hmr) {
        proxy_pass http://127.0.0.1:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static assets - cache for production
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
    }

    # Private storage route for serving files - force download
    location ~ ^/private-storage/(.*)$ {
        internal;
        alias /var/www/storage/app/private/$1;
        
        # Force download for all files instead of opening in browser
        add_header Content-Disposition "attachment; filename=$1";
        add_header Content-Type "application/octet-stream";
        
        # Override for specific file types if needed
        location ~ \.(pdf)$ {
            add_header Content-Disposition "attachment; filename=$1";
            add_header Content-Type "application/pdf";
        }
        
        location ~ \.(gz|nii)$ {
            add_header Content-Disposition "attachment; filename=$1";
            add_header Content-Type "application/gzip";
        }
        
        location ~ \.(json)$ {
            add_header Content-Disposition "attachment; filename=$1";
            add_header Content-Type "application/json";
        }
    }
}
services:
  app:
    build:
      context: .
      args:
        WWWUSER: 1000
        WWWGROUP: 1000
    container_name: medical-app
    ports:
      - '80:80'
      - '443:443'
      - '5173:5173'
    volumes:
      - .:/var/www:cached
      - studies-data:/var/www/storage/app/private/studies:consistent
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - redis
      - postgres
    networks:
      - holonauts-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: medical-redis
    ports:
      - '6379'
    volumes:
      - redis-data:/data
    networks:
      - holonauts-network
    command: redis-server --appendonly yes
    restart: unless-stopped

  worker:
    build:
      context: .
      args:
        WWWUSER: 1000
        WWWGROUP: 1000
    container_name: medical-worker
    depends_on:
      - app
      - redis
      - postgres
    volumes:
      - .:/var/www:cached
      - studies-data:/var/www/storage/app/private/studies:consistent
    command: php artisan horizon:watch --without-tty
    networks:
      - holonauts-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: medical-postgres
    environment:
      POSTGRES_DB: medical_app
      POSTGRES_USER: medical_user
      POSTGRES_PASSWORD: medical_password123
    ports:
      - '5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - holonauts-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: medical-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@medical-app.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
    ports:
      - '8081:80'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - holonauts-network
    restart: unless-stopped

networks:
  holonauts-network:
    name: holonauts-network
    driver: bridge

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  studies-data:
    driver: local
